@model ProjetoModeloDDD.MVC.ViewModels.AgendaViewModel

@{
    ViewBag.Title = "Editar agenda";
    ViewBag.ID = Model.AgendaID;
    ViewBag.BtnVoltar = true;
    ViewBag.BtnRemover = true;
    ViewBag.BtnDetalhes = true;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="row g-3">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AgendaID)

    <div class="col-md-4">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-4">
        @Html.LabelFor(model => model.Idade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Idade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Idade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-4">
        @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12">
            @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
        <button type="submit" class="btn btn-totvs">Salvar</button>
    </div>
</div>
}
