@model IEnumerable<ProjetoModeloDDD.MVC.ViewModels.RegistroCompraViewModel>

@{
    ViewBag.Title = "Registro de Compras";

    ViewBag.PlaceHolderPesquisar = "(Valor, Quantidade, Produto)";
    ViewBag.Pesquisar = true;
    ViewBag.BtnCadastro = true;
  
}

<div class="alert alert-warning alert-dismissible fade show" role="alert">
   Ao registrar uma compra de produto, será atualizado o <strong>Valor de Venda</strong> e <strong>Estoque</strong> do mesmo.
</div>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RegistroCompraID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValorTotal)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantidade)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Produto)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.RegistroCompraID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ValorTotal)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantidade)
        </td>
        <td>
            @if (item.Produto > 0)
            {

                var ProdutoEncontrado = false;

               foreach (var f in @ViewBag.Produtos)
            {

                if (@Html.Raw(f.ProdutoID).ToString() ==
                    item.Produto.ToString())
                {
                    <a href="/Produtos/Detalhes/@f.ProdutoID">@f.Nome</a>;
                    ProdutoEncontrado = true;

                }
            }
          
            if (!ProdutoEncontrado)
            {
                <i>Produto não registrado</i>
            }
            }
            else
            {
            <i>Sem produto</i>
            }
        </td>
        <td class="td-menu">
            @Html.ActionLink("Editar", "Editar", new { id = item.RegistroCompraID }, new { @class = "btn btn-light btn-sm" })
            @Html.ActionLink("Detalhes", "Detalhes", new { id = item.RegistroCompraID }, new { @class = "btn btn-light btn-sm" })
        </td>
    </tr>
}

</table>

<div class="alert alert-info alert-dismissible fade show" role="alert">
    <h4 class="alert-heading">Métodos</h4>
    <p>Funções disponíveis na página <strong>@ViewBag.Title</strong></p>
    <hr>
    <ol class="list-group list-group-numbered">
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Listagem/Cadastrar/Editar/Detalhes/Remover/Pesquisar</div>
                Por padrão, é possível Cadastrar, Editar, Remover, Detalhar e Pesquisar itens que são mostrados em uma listagem na página inicial. Para remover é necessário
                entrar em "Editar" ou "Detalhes".
            </div>
        </li>
   
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Registro de compras</div>
                Ao registrar uma compra do produto, ele automaticamente atualizará o estoque (atual + novo),
                Preço de Compra (Valor total da compra / Quantidade), e caso o estoque novo for maior que o Estoque Mínimo, ele será ativado.
            </div>
        </li>

    </ol>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>