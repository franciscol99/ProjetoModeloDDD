@model ProjetoModeloDDD.MVC.ViewModels.ProdutoViewModel

@{
    ViewBag.Title = "Estoque do produto";
    ViewBag.ID = Model.ProdutoID;
    ViewBag.BtnVoltar = true;
    ViewBag.BtnEditar = true;
    ViewBag.BtnRemover = true;
}


<h4>  @Html.DisplayFor(model => model.ProdutoID) - 
    @Html.DisplayFor(model => model.Nome) 
    <span class="badge text-bg-info">@Html.DisplayFor(model => model.CodigoFabrica) </span></h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        Caso o <strong>Estoque</strong> for menor do que o <strong>Estoque mínimo</strong>, o produto ficará inativo.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div class="row g-3">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProdutoID)

        <div class="col-md-6">
            @Html.LabelFor(model => model.Estoque, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Estoque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estoque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-6">
            @Html.LabelFor(model => model.EstoqueMin, htmlAttributes: new { @class = "form-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.EstoqueMin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstoqueMin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <button type="submit" class="btn btn-totvs">Salvar</button>
        </div>
    </div>
}
