@model IEnumerable<ProjetoModeloDDD.MVC.ViewModels.ProdutoViewModel>

@{
    ViewBag.Title = "Produtos";

    ViewBag.PlaceHolderPesquisar = "(ID, Nome, Descrição, Código de Fábrica)";
    ViewBag.Pesquisar = true;
    ViewBag.BtnCadastro = true;
    ViewBag.BtnExtra = new string[] {
     " <a href=\"/Fabricante/\" class=\"btn btn-totvs\">Fabricantes</a>",
     " <a href=\"/RegistroCompra/\" class=\"btn btn-totvs\">Registro de Compras</a>"
 };
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProdutoID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Nome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Descricao)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CodigoFabrica)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Fabricante)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.valorCompra)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ValorVenda)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Estoque)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ativo)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr data-ativo="@item.ativo">
            <td>
                @Html.DisplayFor(modelItem => item.ProdutoID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CodigoFabrica)
            </td>
            <td>
                @if (item.Fabricante > 0)
                {
                    var FabricanteProdutoEncontrado = false;
                    foreach (var f in @ViewBag.Fabricantes)
                    {

                        if (@Html.Raw(f.FabricanteID).ToString() ==
                            item.Fabricante.ToString())
                        {
                            <a href="/Fabricante/Detalhes/@f.FabricanteID">@f.Nome</a>;
                            FabricanteProdutoEncontrado = true;

                        }
                    }

                    if (!FabricanteProdutoEncontrado)
                    {
                        <i>Fabricante não registrado</i>
                    }
                }
                else
                {
                    <i>Sem fabricante</i>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.valorCompra)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ValorVenda)
            </td>
            <td style="text-align: center">
                <button type="button" class="btn btn-light btn-sm editarEstoque" 
                        data-id="@item.ProdutoID" data-bs-toggle="modal" data-bs-target="#modalIndex">
                    @if (item.EstoqueMin == item.Estoque)
                    {
                        <div class="badge text-bg-warning"> @item.Estoque/@item.EstoqueMin </div>
                    }
                    else if (item.EstoqueMin > item.Estoque)
                    {
                        <div class="badge text-bg-danger"> @item.Estoque/@item.EstoqueMin </div>
                    }
                    else
                    {
                        <div class="badge text-bg-info"> @item.Estoque/@item.EstoqueMin </div>

                    }
                </button>
            </td>
            <td>
                @if (item.ativo)
                {
                    <span class="badge text-bg-success">Sim</span>
                }
                else
                {
                    <span class="badge text-bg-danger">Não</span>
                }
            </td>
            <td >
                @*@Html.ActionLink("Estoque", "Estoque", new { id = item.ProdutoID }, new { @class = "btn btn-light btn-sm" })*@
                @Html.ActionLink("Editar", "Editar", new { id = item.ProdutoID }, new { @class = "btn btn-light btn-sm" })
                @Html.ActionLink("Detalhes", "Detalhes", new { id = item.ProdutoID }, new { @class = "btn btn-light btn-sm" })
            </td>
        </tr>
    }

</table>

<div class="alert alert-info alert-dismissible fade show" role="alert">
    <h4 class="alert-heading">Métodos</h4>
    <p>Funções disponíveis na página <strong>@ViewBag.Title</strong></p>
    <hr>
    <ol class="list-group list-group-numbered">
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Listagem/Cadastrar/Editar/Detalhes/Remover/Pesquisar</div>
                Por padrão, é possível Cadastrar, Editar, Remover, Detalhar e Pesquisar itens que são mostrados em uma listagem na página inicial. Para remover é necessário
                entrar em "Editar" ou "Detalhes".
            </div>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Fabricante</div>
                É possível selecionar o fabricante de cada produto, caso não ter nenhum fabricante selecione,
                aparecerá a mensagem <i>"Sem fabricante"</i>, caso o fabricante tenha seu registro removido do banco de dados,
                aparecerá <i>"Fabricante não registrado"</i>
            </div>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Registro de compras</div>
                Ao registrar uma compra do produto, ele automaticamente atualizará o estoque (atual + novo),
                Preço de Compra (Valor total da compra / Quantidade), e caso o estoque novo for maior que o Estoque Mínimo, ele será ativado.
            </div>
        </li>
        <li class="list-group-item d-flex justify-content-between align-items-start">
            <div class="ms-2 me-auto">
                <div class="fw-bold">Estoque/Estoque Mínimo</div>
                Clicando no botão azul onde é informado o estoque de cada produto, é possível gerenciar o estoque. Caso o estoque do produto for menor o Estoque Mínimo, desativará o produto automaticamente.
            </div>
        </li>

    </ol>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

@*SCRIPT*@

@section scripts
{
    <script>
        $(function () {
            $(".editarEstoque").click(function () {
                var $this = $(this);
                var id = $this.attr('data-id');
                var options = { keyboard: true };

                $.ajax({
                    type: "GET",
                    url: '/Produtos/Estoque/' + id + '?acesso=modal',
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        Modal({
                            titulo: "Editar estoque",
                            data: data,
                            footer: false,
                            options: options
                        })
                    },
                    error: function () {
                        alert("Erro ao carregar o conteúdo");
                    }
                });
            });
        });
    </script>
}
